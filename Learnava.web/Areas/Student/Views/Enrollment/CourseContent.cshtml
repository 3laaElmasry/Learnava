@model Course
@{
    ViewData["Title"] = "Course Content";
}

<!-- Back Button -->
<a asp-area="Student"
   asp-controller="Enrollment"
   asp-action="Index"
   class="btn btn-outline-secondary mb-3">
    <i class="bi bi-arrow-left-circle"></i> Back to List
</a>

<!-- Course Info -->
<div class="card shadow-sm border-0 mb-4">
    <div class="card-body">
        <h3 class="text-primary">@Model.Title</h3>
        <p class="text-muted">@Model.Description</p>
    </div>
</div>

<!-- Check if videos exist -->
@if (Model.Videos != null && Model.Videos.Any())
{
    <div class="row">
        <!-- Left: Video Titles -->
        <div class="col-md-4">
            <div class="list-group shadow-sm">
                @foreach (var video in Model.Videos.OrderBy(v => v.Position))
                {
                    var videoId = GetYouTubeId(video.Url);
                    <a href="#" class="list-group-item list-group-item-action"
                       onclick="loadVideo('@videoId'); return false;">
                        <i class="bi bi-play-circle"></i> @video.Title
                    </a>
                }
            </div>
        </div>

        <!-- Right: Video Player -->
        <div class="col-md-8">
            <div class="ratio ratio-16x9 shadow-sm rounded">
                <iframe id="videoPlayer"
                        src="https://www.youtube.com/embed/@GetYouTubeId(Model.Videos.FirstOrDefault()?.Url)"
                        title="Course Video"
                        allowfullscreen>
                </iframe>
            </div>
        </div>
    </div>
}
else
{
    <div class="alert alert-info text-center">
        <i class="bi bi-info-circle"></i> No content for this course untill now.
    </div>
}

@section Scripts {
    <script>
        function loadVideo(videoId) {
            const iframe = document.getElementById("videoPlayer");
            iframe.src = `https://www.youtube.com/embed/${videoId}`;
        }
    </script>
}

@functions {
    public string GetYouTubeId(string url)
    {
        if (string.IsNullOrEmpty(url)) return "";
        var uri = new Uri(url);
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
        return query["v"] ?? uri.Segments.LastOrDefault()?.Replace("/", "") ?? "";
    }
}
